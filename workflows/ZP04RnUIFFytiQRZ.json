{
  "active": false,
  "connections": {
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Insert YT to Vector Database",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert YT to Vector Database",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Prepare Data for Save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data for Save": {
      "main": [
        [
          {
            "node": "Insert YT to Vector Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert YT to Vector Database": {
      "main": [
        [
          {
            "node": "Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-11T12:27:20.298Z",
  "id": "ZP04RnUIFFytiQRZ",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "YouTube Transcripts RAG",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.aiadaptiv.com/youtube/transcript",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "=https://youtu.be/0qkVRLjDCiI?si=Wasm_Jfnd7iLAgZT"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -40,
        -100
      ],
      "id": "321cf77c-1578-4db5-82ee-15c39c0e9d55",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VR2HADCVzHyCEv4F",
          "name": "aiAdaptiv"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 2000,
        "options": {}
      },
      "id": "ab46e6ec-cc3f-4fe5-8235-113629363126",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        500,
        280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f5e2a8a0-6107-4de9-8b51-66b05504f1ac",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        340,
        100
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "zwCoTxavt4ELUwZx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "label",
                "value": "=YouTube Video"
              },
              {
                "name": "id",
                "value": "={{ $('HTTP Request').item.json.response.id }}"
              },
              {
                "name": "author",
                "value": "={{ $ifEmpty($('When Executed by Another Workflow').item.json.author, $('HTTP Request').item.json.response.author)}}\n"
              },
              {
                "name": "title",
                "value": "={{ $ifEmpty($('When Executed by Another Workflow').item.json.title,$('HTTP Request').item.json.response.title ) }}"
              }
            ]
          }
        }
      },
      "id": "f3ebe2b2-5c54-4ae9-8eaa-4a1cfc2e4e84",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        500,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ed88bf32-1c52-4a23-ac42-7d47fb011a3d",
              "name": "transcript",
              "value": "={{ $json.response.transcript }}",
              "type": "string"
            },
            {
              "id": "2c7bee31-03d7-44d2-b33e-040f96f6d5bc",
              "name": "author",
              "value": "={{ $('When Executed by Another Workflow').item.json.author }}",
              "type": "string"
            },
            {
              "id": "ab4c631b-890c-47f4-9132-0632cd942793",
              "name": "title",
              "value": "={{ $('When Executed by Another Workflow').item.json.title }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        -100
      ],
      "id": "4886fcf6-af54-478b-944b-a36c41bbf046",
      "name": "Prepare Data for Save",
      "alwaysOutputData": true,
      "notesInFlow": false
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "19f218e7-b693-80ce-a4ba-c4db38638576",
          "mode": "list",
          "cachedResultName": "AI Agency Research Database",
          "cachedResultUrl": "https://www.notion.so/19f218e7b69380cea4bac4db38638576"
        },
        "title": "={{ $json.metadata.author }}",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "URL|url",
              "urlValue": "={{ $('HTTP Request').item.json.response.url }}"
            },
            {
              "key": "Creator|rich_text",
              "textContent": "={{ $('Prepare Data for Save').item.json.author }}"
            },
            {
              "key": "Title|title",
              "title": "={{ $('Prepare Data for Save').item.json.title }}"
            },
            {
              "key": "Source|select",
              "selectValue": "YouTube"
            }
          ]
        },
        "blockUi": {
          "blockValues": [
            {
              "richText": true,
              "text": {
                "text": [
                  {
                    "text": "={{ $json.pageContent }}",
                    "annotationUi": {}
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        760,
        -100
      ],
      "id": "83d3e7ab-b983-4d84-b261-c7388dc2383b",
      "name": "Notion",
      "credentials": {
        "notionApi": {
          "id": "DFu4pheXYNBPA1mA",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "url"
            },
            {
              "name": "author"
            },
            {
              "name": "title"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -260,
        -100
      ],
      "id": "f998b202-52a5-4185-aff2-90812c525cf7",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "n8n_vectors_youtube",
        "options": {}
      },
      "id": "507ea6d7-bc95-4685-bcfd-f3dda4b6e76f",
      "name": "Insert YT to Vector Database",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [
        400,
        -100
      ],
      "typeVersion": 1,
      "credentials": {
        "postgres": {
          "id": "HN8MS4EGX4BmUQrw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## YouTube Transcript\npass url in the conversation and optional title and author - somehow langchain in a production is not handling metadata correctly",
        "height": 420,
        "width": 220
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -320,
        -260
      ],
      "typeVersion": 1,
      "id": "7b69b0d0-a9fb-4292-8dae-0e5d6f853941",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-04-01T14:52:26.000Z",
  "versionId": "9fa0f877-f47c-42c7-9318-bfe697b664f1"
}