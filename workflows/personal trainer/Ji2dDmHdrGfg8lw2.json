{
  "active": false,
  "connections": {
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert Training resources to Vector Database",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Insert Training resources to Vector Database",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Insert Training resources to Vector Database",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Insert Training video resources to Vector Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Insert Training video resources to Vector Database",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert Training video resources to Vector Database",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-06T15:55:54.226Z",
  "id": "Ji2dDmHdrGfg8lw2",
  "meta": null,
  "name": "POST resource - personal trainer",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "title"
            },
            {
              "name": "data"
            },
            {
              "name": "date"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -80,
        60
      ],
      "id": "6462e4df-73a6-47bd-8c77-542882a721c9",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "chunkSize": 2000,
        "options": {}
      },
      "id": "9be25b32-06fc-4771-a952-710a701246e4",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        660,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "title",
                "value": "={{ $json.title }}"
              },
              {
                "name": "date",
                "value": "={{ $json.date}} "
              }
            ]
          }
        }
      },
      "id": "38be9804-7045-40b5-98f5-8588bb4c8d5b",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        640,
        40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "faea466b-d768-4a3f-a7f0-9f9b80503627",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        500,
        40
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "zwCoTxavt4ELUwZx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "n8n_vectors_personal_trainer_resources",
        "options": {}
      },
      "id": "278b7f44-9126-4eda-85d1-52289ba29e62",
      "name": "Insert Training resources to Vector Database",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [
        500,
        -120
      ],
      "typeVersion": 1,
      "credentials": {
        "postgres": {
          "id": "HN8MS4EGX4BmUQrw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.aiadaptiv.com/youtube/transcript",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        280,
        300
      ],
      "id": "43b56ee3-47c5-45c3-8c8c-0ffae1522e84",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "VR2HADCVzHyCEv4F",
          "name": "aiAdaptiv"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.links }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "96a799dc-842b-44b6-a733-0e74549af664"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "707ac743-a6b0-4350-a597-29837331562f",
                    "leftValue": "={{ $json.links }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        100,
        60
      ],
      "id": "870ff70b-e30e-40ce-bf18-e984db6f5eb7",
      "name": "Switch"
    },
    {
      "parameters": {
        "chunkSize": 2000,
        "options": {}
      },
      "id": "b1d61a68-7f46-41d3-adeb-a8172a6e03d3",
      "name": "Recursive Character Text Splitter1",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        700,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.response.transcript }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "title",
                "value": "={{ $json.response.title }}"
              },
              {
                "name": "date",
                "value": "={{$now}} "
              },
              {
                "name": "type",
                "value": "video"
              }
            ]
          }
        }
      },
      "id": "6df48a9d-0566-4eff-be05-287bf407eedf",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        680,
        500
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "95b2f081-5cf4-4fa8-99c4-4520730d937c",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        540,
        500
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "zwCoTxavt4ELUwZx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "n8n_vectors_personal_trainer_resources",
        "options": {}
      },
      "id": "448f759f-5643-45ef-b227-86dc17372520",
      "name": "Insert Training video resources to Vector Database",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [
        540,
        340
      ],
      "typeVersion": 1,
      "credentials": {
        "postgres": {
          "id": "HN8MS4EGX4BmUQrw",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-05-04T16:47:35.320Z",
      "updatedAt": "2025-05-04T16:47:35.320Z",
      "id": "YQIUcSyZE62Z4yRL",
      "name": "personal trainer"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-05-08T14:50:12.000Z",
  "versionId": "a2c6a20b-7ba1-45ba-9118-dd4765ca633e"
}