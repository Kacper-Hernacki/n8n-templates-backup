{
  "active": true,
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ask a question": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add training data": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Add resources": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-04T16:47:02.410Z",
  "id": "F5X2j7HPG48IEc9t",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "WIP personal trainer",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        500,
        -440
      ],
      "id": "c2d9c7f9-c2e3-49c8-a196-9d3f2a11baa4",
      "name": "Telegram Trigger",
      "webhookId": "ece57ada-3f8a-4cd8-8a04-84e96adc02ef",
      "credentials": {
        "telegramApi": {
          "id": "chCBPG5cf9LyBKIo",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }} . Remember that today is {{ $now }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        700,
        -440
      ],
      "id": "e0a58254-7f66-4283-b1c9-331d89abd74a",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "name": "ask_question",
        "description": "Call this tool to ask a question to a personal trainer or access the training knowledge base or training history",
        "workflowId": {
          "__rl": true,
          "value": "8C7VXqm5VkMDN6vS",
          "mode": "list",
          "cachedResultName": "POST question - personal trainer"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $('Telegram Trigger').item.json.message.text }}",
            "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatId",
              "displayName": "chatId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1200,
        40
      ],
      "id": "785bd57b-36d1-465a-b47c-b9d19f4c974e",
      "name": "Ask a question"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        600,
        -240
      ],
      "id": "53fe7d8f-d7a1-4384-bcb9-1dcc9e976aac",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "zwCoTxavt4ELUwZx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.chat.id }}",
        "tableName": "n8n_personal_training_chat_histories"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        720,
        -240
      ],
      "id": "e43fa53d-d67d-49f4-a28c-b8d78b8913ed",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "HN8MS4EGX4BmUQrw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1080,
        -440
      ],
      "id": "9d4083ce-b655-49d7-a817-7a493062b0ca",
      "name": "Telegram",
      "webhookId": "d0bd2cde-d6a9-4820-be10-fa6524acdc63",
      "credentials": {
        "telegramApi": {
          "id": "chCBPG5cf9LyBKIo",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "name": "add_training_data",
        "description": "Call this tool to post training data to a database",
        "workflowId": {
          "__rl": true,
          "value": "D2WNRVB9UZ7azFyu",
          "mode": "list",
          "cachedResultName": "POST training data"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "data": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('data', ``, 'string') }}",
            "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('title', ``, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "data",
              "displayName": "data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1060,
        40
      ],
      "id": "607c284a-1677-46c4-a885-cc50e2afbee9",
      "name": "Add training data"
    },
    {
      "parameters": {
        "name": "add_resources",
        "description": "Call this tool to add resources to personal trainer knowledge, like YouTube videos, PDFs, or other data.",
        "workflowId": {
          "__rl": true,
          "value": "Ji2dDmHdrGfg8lw2",
          "mode": "list",
          "cachedResultName": "POST resource - personal trainer"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('title', ``, 'string') }}",
            "data": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('data', ``, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "data",
              "displayName": "data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        920,
        40
      ],
      "id": "bf97f80b-53fe-48b7-87ee-77be8c77275a",
      "name": "Add resources"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-05-04T16:47:35.320Z",
      "updatedAt": "2025-05-04T16:47:35.320Z",
      "id": "YQIUcSyZE62Z4yRL",
      "name": "personal trainer"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-07T06:30:57.000Z",
  "versionId": "d9204677-c11b-42ea-a819-9f5dc91a1db3"
}